// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// JournalEntriesColumns holds the columns for the "journal_entries" table.
	JournalEntriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "time_reference", Type: field.TypeString, Size: 50},
		{Name: "time_scale", Type: field.TypeEnum, Enums: []string{"day", "week", "month", "quarter", "year"}, Default: "day"},
		{Name: "entry_type", Type: field.TypeEnum, Enums: []string{"plan-start", "reflection", "summary"}, Default: "reflection"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// JournalEntriesTable holds the schema information for the "journal_entries" table.
	JournalEntriesTable = &schema.Table{
		Name:       "journal_entries",
		Columns:    JournalEntriesColumns,
		PrimaryKey: []*schema.Column{JournalEntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "journal_entries_users_journal_entries",
				Columns:    []*schema.Column{JournalEntriesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "journalentry_user_id",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[7]},
			},
			{
				Name:    "journalentry_time_scale",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[3]},
			},
			{
				Name:    "journalentry_entry_type",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[4]},
			},
			{
				Name:    "journalentry_time_reference",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[2]},
			},
			{
				Name:    "journalentry_user_id_time_scale",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[7], JournalEntriesColumns[3]},
			},
			{
				Name:    "journalentry_user_id_entry_type",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[7], JournalEntriesColumns[4]},
			},
			{
				Name:    "journalentry_created_at",
				Unique:  false,
				Columns: []*schema.Column{JournalEntriesColumns[5]},
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "title", Type: field.TypeString, Size: 255},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"year", "quarter", "month", "week", "day"}, Default: "day"},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "in-progress", "completed"}, Default: "pending"},
		{Name: "score", Type: field.TypeInt, Default: 0},
		{Name: "tags", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_tasks_children",
				Columns:    []*schema.Column{TasksColumns[11]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tasks_users_tasks",
				Columns:    []*schema.Column{TasksColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "task_user_id",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[12]},
			},
			{
				Name:    "task_parent_id",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[11]},
			},
			{
				Name:    "task_type",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[3]},
			},
			{
				Name:    "task_start_date",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[4]},
			},
			{
				Name:    "task_end_date",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[5]},
			},
			{
				Name:    "task_status",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[6]},
			},
			{
				Name:    "task_user_id_type",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[12], TasksColumns[3]},
			},
			{
				Name:    "task_user_id_status",
				Unique:  false,
				Columns: []*schema.Column{TasksColumns[12], TasksColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "password", Type: field.TypeString, Size: 100},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true, Size: 100},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[3]},
			},
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[4]},
			},
		},
	}
	// JournalEntryTasksColumns holds the columns for the "journal_entry_tasks" table.
	JournalEntryTasksColumns = []*schema.Column{
		{Name: "journal_entry_id", Type: field.TypeUUID},
		{Name: "task_id", Type: field.TypeUUID},
	}
	// JournalEntryTasksTable holds the schema information for the "journal_entry_tasks" table.
	JournalEntryTasksTable = &schema.Table{
		Name:       "journal_entry_tasks",
		Columns:    JournalEntryTasksColumns,
		PrimaryKey: []*schema.Column{JournalEntryTasksColumns[0], JournalEntryTasksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "journal_entry_tasks_journal_entry_id",
				Columns:    []*schema.Column{JournalEntryTasksColumns[0]},
				RefColumns: []*schema.Column{JournalEntriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "journal_entry_tasks_task_id",
				Columns:    []*schema.Column{JournalEntryTasksColumns[1]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		JournalEntriesTable,
		TasksTable,
		UsersTable,
		JournalEntryTasksTable,
	}
)

func init() {
	JournalEntriesTable.ForeignKeys[0].RefTable = UsersTable
	TasksTable.ForeignKeys[0].RefTable = TasksTable
	TasksTable.ForeignKeys[1].RefTable = UsersTable
	JournalEntryTasksTable.ForeignKeys[0].RefTable = JournalEntriesTable
	JournalEntryTasksTable.ForeignKeys[1].RefTable = TasksTable
}
